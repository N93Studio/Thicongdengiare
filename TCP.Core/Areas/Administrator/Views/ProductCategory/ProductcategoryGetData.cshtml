
@{
    Layout = null;
}


@if (Model != null)
{
    var i = 1;
    foreach (TCP.DTO.DTO_ProductCategories item in Model)
    {
        <tr>
            <td scope="row">@item.ProductCategoryId</td>
            <td><strong class="text-success">@item.ProductCategoryTitle</strong></td>
            <td class="table_img">
                @if (item.ProductCategoryImage != "" && item.ProductCategoryImage != null)
                {
                    <img src="/upload/ProductCategories/@item.ProductCategoryImage" />

                }
                else
                {
                    <img src="~/assets/images/Admin/Noimage.png" />
                }
            </td>
            <td><a class="text-success" href="/@item.ProductCategoryUrl" target="_blank">@item.ProductCategoryUrl</a></td>
            <td><input class="admin_sort" value="@item.DisplayOrder" onchange="change_displayorder('@item.ProductCategoryId',this)" /></td>
            <td>

                @if (item.IsShow == 1)
                {
                    <p><input checked="checked" type="checkbox" name="check-1" value="@item.ProductCategoryId" class="lcs_check" autocomplete="off" /></p>
                }
                else
                {
                    <p><input type="checkbox" name="check-1" value="@item.ProductCategoryId" class="lcs_check" autocomplete="off" /></p>
                }

            </td>
            <td>
                <a href="/Administrator/ProductCategory/insertlist?ProductCategoryId=@item.ProductCategoryId">
                    <i class="lnr-pencil" style="font-size: 13px; color: white; background-image: linear-gradient(to right, #7c7c7c 0%, #050505 100%) !important; padding: 10px 10px; "></i>
                </a>
                <a href="javascript:deletes('@item.ProductCategoryId','@item.ProductCategoryImage')">
                    <i class="lnr-trash" style="font-size: 13px; color: white; margin-left: 5px; background-color: #ff3162; padding: 10px 10px;"></i>
                </a>
            </td>
        </tr>
        @Html.Action("ProductcategoryGetDataChild", "ProductCategory", new { parentId = item.ProductCategoryId })
        i++;
    }
}
<script>
    // $.alert('An Alert Dialog By jQueryScript', { em: 'Emphasized Text', title: 'Alert Dialog' })
    function deletes(id, name) {
        $.confirm('Bạn có muốn xóa danh mục này?', {
            em: '', title: 'Cảnh báo!', callEvent: function () {
                $.ajax({
                    url: '/Tool/DeleteFile.ashx',
                    data: 'name=' + name + '&folder=' + 'ProductCategories',
                    dataType: 'text',
                    type: 'GET',
                    cache: false,
                    success: function (result) {

                    }
                });
                //
                var param =
                {
                    "productCategoryId": id
                }

                $.ajax({
                    url: '/Administrator/ProductCategory/ProductcategoryDelete',
                    data: param,
                    dataType: 'text',
                    type: 'POST',
                    cache: false,
                    success: function (result) {
                        if (result == "-1") {
                            $.alert('Danh mục này đang có sản phẩm, không thể xóa', { em: '', title: 'Cảnh báo' })
                        }
                        else {
                            window.location.href = "/Administrator/ProductCategory/getlist";

                        }
                    }
                });
            }, cancelEvent: function () { }, cancelButton: 'Không'
        })


    }
    function change_displayorder(id, dd) {
        var param =
        {
            "id": id,
            "idorder": $(dd).val()
        }
        console.log(param);
        $.ajax({
            url: '/Administrator/ProductCategory/ProductcategorySort',
            data: param,
            dataType: 'text',
            type: 'POST',
            cache: false,
            success: function (result) {

            }
        });
    }


</script>




<script type="text/javascript">
    $(document).ready(function (e) {
        $('input').lc_switch();

        // triggered each time a field changes status
        $(document).on('lcs-statuschange', '.lcs_check', function () {
            var status = ($(this).is(':checked')) ? 'checked' : 'unchecked',
                subj = ($(this).attr('type') == 'radio') ? 'radio #' : 'checkbox #',
                num = $(this).val();

            $('#third_div ul').prepend('<li><em>[lcs-statuschange]</em>' + subj + num + ' changed status: ' + status + '</li>');
        });


        // triggered each time a field is checked
        $(document).on('lcs-on', '.lcs_check', function () {
            updateDisplay($(this).val(), 1);
            var subj = ($(this).attr('type') == 'radio') ? 'radio #' : 'checkbox #',
                num = $(this).val();

            $('#third_div ul').prepend('<li><em>[lcs-on]</em>' + subj + num + ' is checked</li>');
        });


        // triggered each time a is unchecked
        $(document).on('lcs-off', '.lcs_check', function () {
            updateDisplay($(this).val(), 0);
            var subj = ($(this).attr('type') == 'radio') ? 'radio #' : 'checkbox #',
                num = $(this).val();

            $('#third_div ul').prepend('<li><em>[lcs-off]</em>' + subj + num + ' is unchecked</li>');
        });
    });


    // clean events log
    $('#third_div small').click(function () {
        $('#third_div ul').empty();
    });
    function updateDisplay(id, status) {
        var param =
        {
            "id": id,
            "idorder": status
        }
        $.ajax({
            url: '/Administrator/ProductCategory/ProductCategoryShow',
            data: param,
            dataType: 'text',
            type: 'POST',
            cache: false,
            success: function (result) {
                window.location.reload();
            }
        });
    }
</script>